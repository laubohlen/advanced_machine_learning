autoplot(lm2)
summary(lm1)
summary(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
summary(lm1)
summary(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
summary(lm1)
summary(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
autoplot(lm1)
autoplot(lm2)
summary(lm1)
summary(lm2)
View(df)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
summary(lm1)
summary(lm2)
autoplot(lm2)
## Remove all objects from workspace
rm(list=ls())
## import libraries
library(tidyverse)
## Set the working directory
setwd("/Users/lau/Documents/Uni/semester_11/252-0535-00_advanced_machine_learning/01task")
## Import data
X_train <- read.csv("./data/X_train.csv")
y_train <- read.csv("./data/y_train.csv")
# merge data
mri <- within(X_train, 'y' <- y_train[,2])
ggplot(mri, aes(x=y)) +
geom_histogram(stat="count") +
theme_bw()
for (row in 1:nrow(mri)) {
age <- row["y"]
age_group <- subset(mri, y==age)
na_vector <- is.na(row)
}
24995 + 3088
24995 + 5732
lm2.matrix
knitr::opts_chunk$set(echo = TRUE)
## Remove all objects from workspace
rm(list=ls())
## Set working directory
setwd("/Users/lau/Documents/Uni/semester_11/sta_121_statistical_modeling/exercises/05exercise")
## import libraries
library(tidyverse)
library(ggfortify)
library(boot)
knitr::opts_chunk$set(echo = TRUE)
## Remove all objects from workspace
rm(list=ls())
## Set working directory
setwd("/Users/lau/Documents/Uni/semester_11/sta_121_statistical_modeling/exercises/05exercise")
## import libraries
library(tidyverse)
library(ggfortify)
library(boot)
knitr::opts_chunk$set(echo = TRUE)
## Remove all objects from workspace
rm(list=ls())
## Set working directory
setwd("/Users/lau/Documents/Uni/semester_11/sta_121_statistical_modeling/exercises/05exercise")
## import libraries
library(tidyverse)
library(ggfortify)
library(boot)
## Source custom functions
source("../../functions/custom_functions.R")
## Import data
df <- read.csv("../../data/salary.txt")
df <- within(df, 'size' <- factor(districtSize))
# show summary statistics
summary(df[,3:5])
# plot pairs salary vs. experience grouped by size
{plot(df$salary, df$experience, col=c("red", "blue", "green")[df$size], pch=16,
main = "Salary vs. experience", xlab = "Salary", ylab = "Experience")
legend("topleft", title="Nr. of students", legend=c("<1000", "1000–2000", ">2000"), col=c("red", "blue", "green"),
pch=16, cex=.8)}
# plot salary grouped by district size
ggplot(df, aes(size, salary)) +
geom_boxplot(fill= "blue", alpha= .4) +
geom_jitter(width= .05, height= 0, col= "black", alpha= .3) +
stat_summary(fun= mean, geom= "point", col= "red", size= 3) +
stat_summary(fun.data= mean_cl_normal, geom= "errorbar",
col= "red", width= .1, lwd= 1) +
labs(title= "Salary grouped by district size") +
theme_bw() +
theme(plot.title= element_text(hjust= 0.5))
## Assess normality of salary
multiplot(ggplot(df, aes(salary)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$salary),
sd(df$salary)),
col= "red", size= 1) +
labs(title= "Histogram"),
qplot(sample= scale(df$salary), main= "QQ-Diagram") +
geom_abline(intercept= 0, slope= 1, col= "red"), cols= 2)
## Assess normality of experience
multiplot(ggplot(df, aes(experience)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$experience),
sd(df$experience)),
col= "red", size= 1) +
labs(title= "Histogram"),
qplot(sample= scale(df$experience), main= "QQ-Diagram") +
geom_abline(intercept= 0, slope= 1, col= "red"), cols= 2)
# mean salary converted to CHF (1 CHF = 0.91 USD)
chf_mean_salary = summary(df$salary)["Mean"]
chf_mean_salary*0.91
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
summary(lm1)
summary(lm2)
lm2.matrix
model.matrix(lm2)
model.matrix(lm1)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ df$experience + df$size)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1+df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1+df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
lm2 <- lm(df$salary ~ 0 + df$experience)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 0 + df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 0+ df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ df$experience)
summary(lm1)
summary(lm2)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
lm3 <- lm(df$salary ~ df$experience + df$size)
summary(lm1)
summary(lm2)
summary(lm3)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
lm3 <- lm(df$salary ~ df$size)
summary(lm1)
summary(lm2)
summary(lm3)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 10 + df$experience + df$size)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
lm3 <- lm(df$salary ~ df$size)
summary(lm1)
summary(lm2)
summary(lm3)
model.matrix(lm2)
# create two models using district size as number and as factor respectively
lm1 <- lm(df$salary ~ 1 + df$experience + df$districtSize)
lm2 <- lm(df$salary ~ 1 + df$experience + df$size)
summary(lm1)
summary(lm2)
24995+3088.00
24995+5732.28
B.11 <- lm(df$salary ~ 1 + I(df$experience + 11) + df$size)
summary(B.11)
B.11 <- lm(df$salary ~ 1 + I(df$experience - 11) + df$size)
summary(B.11)
24'995 + 11 * 584
24995 + 11 * 584
24995 + (11 * 584)
24995 + (11 * 584)
24995.49 + 11 x 584.15
24995,49 + 11 x 584.15
2499549 + 11 * 584.15
24995.49 + 11 * 584.15
B.11 <- lm(df$salary ~ 1 + I(df$experience - 11) + df$size)
summary(B.11)$coefficien
B.11 <- lm(df$salary ~ 1 + I(df$experience - 11) + df$size)
summary(B.11)$coefficient
# create two models using district size as number and as factor respectively
A <- lm(df$salary ~ 1 + df$experience + df$districtSize)
B <- lm(df$salary ~ 1 + df$experience + df$size)
summary(A)
summary(B)
B.11 <- lm(df$salary ~ 1 + I(df$experience - 11) + df$size)
summary(B.11)$coefficient
summary(B.11)$residuals
autoplot(B.11)
plot(B.11)
plot(B.11)
autoplot(B.11)
22065.55+2924.90
586.42 * 1 + (22065.55 + 2924.90)
586.42 * 12 + (22065.55 + 2924.90)
584.15 * 12 + (24995.49 + 5732.28)
# show summary statistics
summary(df[,3:5])
# plot pairs salary vs. experience grouped by size
{plot(df$salary, df$experience, col=c("red", "blue", "green")[df$size], pch=16,
main = "Salary vs. experience", xlab = "Salary", ylab = "Experience")
legend("topleft", title="Nr. of students", legend=c("<1000", "1000–2000", ">2000"), col=c("red", "blue", "green"),
pch=16, cex=.8)}
# plot salary grouped by district size
ggplot(df, aes(size, salary)) +
geom_boxplot(fill= "blue", alpha= .4) +
geom_jitter(width= .05, height= 0, col= "black", alpha= .3) +
stat_summary(fun= mean, geom= "point", col= "red", size= 3) +
stat_summary(fun.data= mean_cl_normal, geom= "errorbar",
col= "red", width= .1, lwd= 1) +
labs(title= "Salary grouped by district size") +
theme_bw() +
theme(plot.title= element_text(hjust= 0.5))
## Assess normality of salary
ggplot(df, aes(salary)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$salary), sd(df$salary)), col= "red", size= 1) +
labs(title= "Histogram")
## Assess normality of experience
ggplot(df, aes(experience)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$experience), sd(df$experience)), col= "red", size= 1) +
labs(title= "Histogram")
# mean salary converted to CHF (1 CHF = 0.91 USD)
chf_mean_salary = summary(df$salary)["Mean"]
chf_mean_salary*0.91
# show summary statistics
summary(df[,3:5])
# plot pairs salary vs. experience grouped by size
{plot(df$salary, df$experience, col=c("red", "blue", "green")[df$size], pch=16,
main = "Salary vs. experience", xlab = "Salary", ylab = "Experience")
legend("topleft", title="Nr. of students", legend=c("<1000", "1000–2000", ">2000"), col=c("red", "blue", "green"),
pch=16, cex=.8)}
# plot salary grouped by district size
ggplot(df, aes(size, salary)) +
geom_boxplot(fill= "blue", alpha= .4) +
geom_jitter(width= .05, height= 0, col= "black", alpha= .3) +
stat_summary(fun= mean, geom= "point", col= "red", size= 3) +
stat_summary(fun.data = mean_se, geom = "errorbar",
col= "red", width= .1, lwd= 1) +
labs(title= "Salary grouped by district size") +
theme_bw() +
theme(plot.title= element_text(hjust= 0.5))
## Assess normality of salary
ggplot(df, aes(salary)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$salary), sd(df$salary)), col= "red", size= 1) +
labs(title= "Histogram")
## Assess normality of experience
ggplot(df, aes(experience)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$experience), sd(df$experience)), col= "red", size= 1) +
labs(title= "Histogram")
# mean salary converted to CHF (1 CHF = 0.91 USD)
chf_mean_salary = summary(df$salary)["Mean"]
chf_mean_salary*0.91
# show summary statistics
summary(df[,3:5])
# plot pairs salary vs. experience grouped by size
{plot(df$salary, df$experience, col=c("red", "blue", "green")[df$size], pch=16,
main = "Salary vs. experience", xlab = "Salary", ylab = "Experience")
legend("topleft", title="Nr. of students", legend=c("<1000", "1000–2000", ">2000"), col=c("red", "blue", "green"),
pch=16, cex=.8)}
# plot salary grouped by district size
ggplot(df, aes(size, salary)) +
geom_boxplot(fill= "blue", alpha= .4) +
geom_jitter(width= .05, height= 0, col= "black", alpha= .3) +
stat_summary(fun= mean, geom= "point", col= "red", size= 3) +
stat_summary(stat_summary(fun.data = mean_cl_normal, geom = "errorbar", fun.args = list(mult = 1)),
col= "red", width= .1, lwd= 1) +
labs(title= "Salary grouped by district size") +
theme_bw() +
theme(plot.title= element_text(hjust= 0.5))
# show summary statistics
summary(df[,3:5])
# plot pairs salary vs. experience grouped by size
{plot(df$salary, df$experience, col=c("red", "blue", "green")[df$size], pch=16,
main = "Salary vs. experience", xlab = "Salary", ylab = "Experience")
legend("topleft", title="Nr. of students", legend=c("<1000", "1000–2000", ">2000"), col=c("red", "blue", "green"),
pch=16, cex=.8)}
# plot salary grouped by district size
ggplot(df, aes(size, salary)) +
geom_boxplot(fill= "blue", alpha= .4) +
geom_jitter(width= .05, height= 0, col= "black", alpha= .3) +
stat_summary(fun= mean, geom= "point", col= "red", size= 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", fun.args = list(mult = 1),
col= "red", width= .1, lwd= 1) +
labs(title= "Salary grouped by district size") +
theme_bw() +
theme(plot.title= element_text(hjust= 0.5))
## Assess normality of salary
ggplot(df, aes(salary)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$salary), sd(df$salary)), col= "red", size= 1) +
labs(title= "Histogram")
## Assess normality of experience
ggplot(df, aes(experience)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$experience), sd(df$experience)), col= "red", size= 1) +
labs(title= "Histogram")
# mean salary converted to CHF (1 CHF = 0.91 USD)
chf_mean_salary = summary(df$salary)["Mean"]
chf_mean_salary*0.91
# show summary statistics
summary(df[,3:5])
# plot pairs salary vs. experience grouped by size
{plot(df$salary, df$experience, col=c("red", "blue", "green")[df$size], pch=16,
main = "Salary vs. experience", xlab = "Salary", ylab = "Experience")
legend("topleft", title="Nr. of students", legend=c("<1000", "1000–2000", ">2000"), col=c("red", "blue", "green"),
pch=16, cex=.8)}
# plot salary grouped by district size
ggplot(df, aes(size, salary)) +
geom_boxplot(fill= "blue", alpha= .4) +
geom_jitter(width= .05, height= 0, col= "black", alpha= .3) +
stat_summary(fun= mean, geom= "point", col= "red", size= 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
col= "red", width= .1, lwd= 1) +
labs(title= "Salary grouped by district size") +
theme_bw() +
theme(plot.title= element_text(hjust= 0.5))
## Assess normality of salary
ggplot(df, aes(salary)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$salary), sd(df$salary)), col= "red", size= 1) +
labs(title= "Histogram")
## Assess normality of experience
ggplot(df, aes(experience)) +
geom_histogram(aes(y= ..density..), bins=15, fill= "black", col= "white") +
stat_function(fun= dnorm, args= list(mean(df$experience), sd(df$experience)), col= "red", size= 1) +
labs(title= "Histogram")
# mean salary converted to CHF (1 CHF = 0.91 USD)
chf_mean_salary = summary(df$salary)["Mean"]
chf_mean_salary*0.91
586.42 * 12 + (22065.55 + (2924.90 * 3))
XX <- matrix(c(1, 0.25, 0.25, 0.25, 0.5, -0.25, 0.25, -0.25, 2), nrow = 3, ncol = 3)
XX
ss = 2
v = ss*XX
v
es_beta2 <- sqrt(v[3,3])
es_beta2
XX <- matrix(c(1, 0.25, 0.25, 0.25, 0.5, -0.25, 0.25, -0.25, 2), nrow = 3, ncol = 3)
ss = 2
v = ss*XX
es_beta2 <- sqrt(v[3,3])
es_beta2
n <- 15
beta2 <- 15
t_0 <- beta2/es_beta2
t_0
t_0.975 <- qt(0.975, df = n-3)
abs(t_0) > t_0.975
2 * (1 - pt(abs(t0), df = n-3))
n <- 15
beta2 <- 15
t_0 <- beta2/es_beta2
t_0
t_0.975 <- qt(0.975, df = n-3)
abs(t_0) > t_0.975
2 * (1 - pt(abs(t_0), df = n-3))
n <- 15
beta2 <- 15
t_0 <- beta2/es_beta2
t_0
t_0.975 <- qt(0.975, df = n-3)
abs(t_0) > t_0.975
n <- 15
beta2 <- 15
t_0 <- beta2/es_beta2
t_0
t_0.975 <- qt(0.975, df = n-3)
abs(t_0) > t_0.975
p_val <- 2 * (1 - pt(abs(t_0), df = n-3))
p_val
cov_b1b2 <- V[2, 3]
XX <- matrix(c(1, 0.25, 0.25, 0.25, 0.5, -0.25, 0.25, -0.25, 2), nrow = 3, ncol = 3)
ss = 2
V = ss*XX
es_beta2 <- sqrt(V[3,3])
es_beta2
n <- 15
beta2 <- 15
t_0 <- beta2/es_beta2
t_0
t_0.975 <- qt(0.975, df = n-3)
abs(t_0) > t_0.975
p_val <- 2 * (1 - pt(abs(t_0), df = n-3))
p_val
cov_b1b2 <- V[2, 3]
se_b1b2 <- sqrt(V[2, 2] + V[3, 3] - 2 * cov_b1b2)
se_b1b2
beta1 <- 12
beta2 <- 15
t_0 <- (beta1 - beta2)/se_b1b2
abs(t_0) > t_0.975
ci <- (beta1 - beta2) + c(-1, 1) * t_0.975 * se_b1b2
beta1 <- 12
beta2 <- 15
t_0 <- (beta1 - beta2)/se_b1b2
abs(t_0) > t_0.975
ci <- (beta1 - beta2) + c(-1, 1) * t_0.975 * se_b1b2
ci
sst <- 120
res <- (n - 3)
reg <- 2
sse <- ss * df_res
sst <- 120
res <- (n - 3)
reg <- 2
sse <- ss * res
ssr <- sst - sse
F0 <- (ssr/reg)/ss
F0 > qf(0.95, reg, res)
r2 <- ssr/sst
r2
abs(8)
abs(-3)
n <- 15
beta2 <- 15
t_0 <- beta2/es_beta2
t_0
t_0.975 <- qt(0.975, df = n-3)
test <- abs(t_0) > t_0.975
test
p_val <- 2 * (1 - pt(abs(t_0), df = n-3))
p_val
sst <- 120
res <- (n - 3)
reg <- 2
sse <- ss * res
ssr <- sst - sse
F0 <- (ssr/reg)/ss
test <- F0 > qf(0.95, reg, res)
r2 <- ssr/sst
r2
sst <- 120
res <- (n - 3)
reg <- 2
sse <- ss * res
ssr <- sst - sse
F0 <- (ssr/reg)/ss
test <- F0 > qf(0.95, reg, res)
test
r2 <- ssr/sst
r2
knitr::opts_chunk$set(echo = TRUE)
## Remove all objects from workspace
rm(list=ls())
## Set working directory
setwd("/Users/lau/Documents/Uni/semester_11/sta_121_statistical_modeling/exercises/05exercise")
## import libraries
library(tidyverse)
library(ggfortify)
