GridSearchCV(cv=StratifiedKFold(n_splits=3, random_state=23, shuffle=True),
             estimator=SVC(class_weight='balanced', kernel='linear',
                           random_state=23),
             n_jobs=-1,
             param_grid={'C': [0.05, 0.1, 0.5],
                         'decision_function_shape': ['ovr', 'ovo'],
                         'gamma': [0.05, 0.1, 0.5],
                         'kernel': ['linear', 'poly', 'rbf'],
                         'tol': [0.005, 0.001, 0.005]},
             scoring='balanced_accuracy')


Best parameters set found on development set:
{'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}

Grid scores on development set:
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6893 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6453 (+/-0.008) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6453 (+/-0.008) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6453 (+/-0.008) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6408 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6407 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6408 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6893 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6055 (+/-0.023) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6050 (+/-0.025) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.6055 (+/-0.023) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6406 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6406 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6406 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6893 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4323 (+/-0.032) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4323 (+/-0.032) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4323 (+/-0.032) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6893 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6453 (+/-0.008) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6453 (+/-0.008) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6453 (+/-0.008) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6408 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6407 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6408 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6893 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6055 (+/-0.023) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6050 (+/-0.025) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.6055 (+/-0.023) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6406 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6406 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6406 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6893 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6894 (+/-0.021) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4323 (+/-0.032) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4323 (+/-0.032) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4323 (+/-0.032) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6294 (+/-0.018) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6294 (+/-0.018) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6294 (+/-0.018) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6583 (+/-0.009) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6583 (+/-0.009) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6583 (+/-0.009) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5990 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5990 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5990 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6546 (+/-0.017) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6545 (+/-0.017) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6546 (+/-0.017) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4642 (+/-0.031) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4642 (+/-0.031) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4642 (+/-0.031) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6294 (+/-0.018) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6294 (+/-0.018) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6294 (+/-0.018) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6583 (+/-0.009) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6583 (+/-0.009) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6583 (+/-0.009) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5990 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5990 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5990 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6546 (+/-0.017) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6545 (+/-0.017) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6546 (+/-0.017) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6925 (+/-0.035) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4642 (+/-0.031) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4642 (+/-0.031) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4642 (+/-0.031) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6626 (+/-0.018) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.5992 (+/-0.015) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.5992 (+/-0.015) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.5992 (+/-0.015) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6906 (+/-0.016) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6906 (+/-0.016) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6906 (+/-0.016) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6626 (+/-0.018) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6900 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6900 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6900 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6626 (+/-0.018) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5227 (+/-0.041) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.5227 (+/-0.041) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.5227 (+/-0.041) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6626 (+/-0.018) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.5992 (+/-0.015) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.5992 (+/-0.015) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.5992 (+/-0.015) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6906 (+/-0.016) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6906 (+/-0.016) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6906 (+/-0.016) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6626 (+/-0.018) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6900 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6900 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6900 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6626 (+/-0.018) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6633 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5963 (+/-0.023) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5969 (+/-0.024) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5227 (+/-0.041) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.5227 (+/-0.041) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.5227 (+/-0.041) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}


GridSearchCV(cv=StratifiedKFold(n_splits=3, random_state=23, shuffle=True),
             estimator=SVC(class_weight='balanced',
                           decision_function_shape='ovo', kernel='linear',
                           random_state=23),
             n_jobs=-1,
             param_grid={'C': [0.05, 0.1, 0.5],
                         'decision_function_shape': ['ovr', 'ovo'],
                         'gamma': [0.05, 0.1, 0.5],
                         'kernel': ['linear', 'poly', 'rbf'],
                         'tol': [0.005, 0.001, 0.005]},
             scoring='balanced_accuracy')


Grid scores on development set:
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6224 (+/-0.018) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6224 (+/-0.018) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6224 (+/-0.018) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6467 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6467 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6467 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5954 (+/-0.006) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5959 (+/-0.006) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5954 (+/-0.006) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6256 (+/-0.017) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6255 (+/-0.017) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6256 (+/-0.017) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4006 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4006 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4006 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6224 (+/-0.018) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6224 (+/-0.018) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6224 (+/-0.018) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6467 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6467 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6467 (+/-0.007) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5954 (+/-0.006) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5959 (+/-0.006) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5954 (+/-0.006) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6256 (+/-0.017) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6255 (+/-0.017) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6256 (+/-0.017) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6908 (+/-0.015) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4006 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4006 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4006 (+/-0.010) for {'C': 0.05, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6105 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6106 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6105 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6594 (+/-0.012) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6594 (+/-0.012) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6594 (+/-0.012) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6538 (+/-0.011) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6538 (+/-0.011) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6538 (+/-0.011) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4206 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4206 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4206 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6105 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6106 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.6105 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6594 (+/-0.012) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6594 (+/-0.012) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6594 (+/-0.012) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6538 (+/-0.011) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6538 (+/-0.011) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6538 (+/-0.011) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6793 (+/-0.013) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4206 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4206 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4206 (+/-0.023) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6475 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.5942 (+/-0.008) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.5942 (+/-0.008) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.5942 (+/-0.008) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6924 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6924 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6924 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6475 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6822 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6822 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6822 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6475 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4689 (+/-0.034) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4689 (+/-0.034) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4689 (+/-0.034) for {'C': 0.5, 'decision_function_shape': 'ovr', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.6475 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.001}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'linear', 'tol': 0.005}
0.5942 (+/-0.008) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.5942 (+/-0.008) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.001}
0.5942 (+/-0.008) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'poly', 'tol': 0.005}
0.6924 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6924 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.001}
0.6924 (+/-0.017) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.05, 'kernel': 'rbf', 'tol': 0.005}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.6475 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.001}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'poly', 'tol': 0.005}
0.6822 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6822 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.001}
0.6822 (+/-0.009) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.1, 'kernel': 'rbf', 'tol': 0.005}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.6475 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.001}
0.6473 (+/-0.014) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'linear', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.001}
0.5979 (+/-0.004) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'poly', 'tol': 0.005}
0.4689 (+/-0.034) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}
0.4689 (+/-0.034) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.001}
0.4689 (+/-0.034) for {'C': 0.5, 'decision_function_shape': 'ovo', 'gamma': 0.5, 'kernel': 'rbf', 'tol': 0.005}